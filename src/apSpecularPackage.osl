#include "../lib/ShaderAPI.h"
#include "../lib/Variation.h"

shader apSpecularPackage
[[
    string help = "Package float for Renderman surface parameters"
]]
(
    float KFace = 0.0
    [[
        int connectable = 0,
        string page = "Specular"
    ]],
    float KEdge = 1.0
    [[
        int connectable = 0,
        string page = "Specular"
    ]],
    float roughness = 0.0
    [[
        int connectable = 0,
        string help = "Suggested values range from 0.0 to 0.4",
        string page = "Specular"
    ]],

    VARIATION_PARAMS(specular, "Specular."),
    float varAffectEdge = 0.0
    [[
        int connectable = 0,
        string help = "How much of the variation should be applied to the edge",
        string page = "Specular.Variation"
    ]],

    VARIATION_PARAMS(roughness, "Specular.Roughness"),

    color tint = color(1.0)
    [[
        string help = "Tints the result",
        string page = "Specular"
    ]],

    output color resultKFace = color(0.0),
    output color resultKEdge = color(0.0),
    output float resultRoughness = 0.0
)
{
    float KFaceMult = VariationVary(specularVarMin, specularVarMid, specularVarMax, specularVarPattern);
    float KEdgeMult = mix(1.0, KFaceMult, varAffectEdge);
    resultKFace = color(KFace * KFaceMult) * tint;
    resultKEdge = color(KEdge * KEdgeMult) * tint;

    float roughnessMult = VariationVary(roughnessVarMin, roughnessVarMid, roughnessVarMax, roughnessVarPattern);
    resultRoughness = roughness * roughnessMult;
} 