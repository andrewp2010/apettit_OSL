#include "../lib/ShaderAPI.h"
#include "../lib/Color.h"
#include "../lib/Math.h"
#include "../lib/Texture.h"

shader apTexture_1
[[ string help = "Read texture map" ]]
(
    TEXTURE_INPUTS,

    float s = 0
    [[
        int connectable = 0,
        int lockgeom = 0,
        string widget = "null"
    ]],
    float t = 0
    [[
        int connectable = 0,
        int lockgeom = 0,
        string widget = "null"
    ]],

    COLOR_OUTPUTS
)
{
    string wrapMode = "default";
    if (tileTex)
        wrapMode = "periodic";

    float inputS = s;
    float inputT = t;
    if (invertT)
        inputT = 1 - inputT;
    inputS *= scaleS * scaleGlobal;
    inputT *= scaleT * scaleGlobal;

    //TODO: optimization pass
        //TODO: test if texture exists
        //TODO: check how many channels in texture to read

    // OSL may support RGBA return
    //TODO: debug wrap
    resultRGBA.RGB = texture(filename, inputS, inputT,
                             "wrap", wrapMode,
                             "missingcolor", missingRGB);
    resultRGBA.A = texture(filename, inputS, inputT,
                           "wrap", wrapMode,
                           "firstchannel", 3,
                           "missingcolor", color(missingA));

    resultRGBA.RGB = RemapColor(resultRGBA.RGB, 
                                inputMin, inputMax,
                                outputMin, outputMax);

    COLOR_OUTPUTS_SET;
}