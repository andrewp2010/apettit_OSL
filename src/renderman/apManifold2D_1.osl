#include "../lib/ShaderAPI.h"
#include "../lib/Manifold.h"

shader apManifold2D_1
[[ string help = "Read texture map" ]]
(
    STRING("", "UV Set", uvSetName, ""),
    FLOAT("", "", s, 0.0, 
          int connectable = 0, int lockgeom = 0, string widget = "null"),
    FLOAT("", "", t, 0.0, 
          int connectable = 0, int lockgeom = 0, string widget = "null"),

    MANIFOLD_XFORM_PARAMS,

    MANIFOLD_2D_OUTPUTS
)
{
    float inputUvSet[2];
    int uvSetFound = 0;

    if (uvSetName == "" || uvSetName == "uv")
    {
        inputUvSet[0] = s;
        inputUvSet[1] = t;
        uvSetFound = 1;
    }
    else
    {
        inputUvSet[0] = 0.0;
        inputUvSet[1] = 0.0;
        uvSetFound = getattribute("primvar", uvSetName, inputUvSet);
    }

    if (uvSetFound)
        resultManifold.Q = point(inputUvSet[0], inputUvSet[1], 0.0);
    else
        resultManifold.Q = point(0.0);

    resultManifold.Qradius = 0.0;
    resultManifold.QN = vector(0.0, 0.0, 1.0);

    MANIFOLD_TRANSFORM;

    MANIFOLD_2D_OUTPUTS_SET;
}